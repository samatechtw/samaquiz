import {
  I18nObject,
  SimpleI18n,
  getString,
  getArray,
  getRecord,
} from '@frontend/util/i18n'

const fallback: I18nObject = {
  company: 'SamaQuiz',
  answers: 'Answers',
  avatar: 'Avatar',
  bio: 'Bio',
  cancel: 'Cancel',
  confirm: 'Confirm',
  code: 'Code',
  create: 'Create',
  correct: 'Correct',
  delete: 'Delete',
  description: 'Description',
  edit: 'Edit',
  email: 'Email',
  ended: 'Ended',
  extend: 'Extend',
  import: 'Import',
  export: 'Export',
  link: 'Link',
  leaders: 'Leaders',
  no_leaders: 'No Leaders',
  location: 'Location',
  logout: 'Log Out',
  name: 'Name',
  new: 'New',
  next: 'Next',
  not_found: 'Not Found',
  not_found_text: "Sorry, we can't find what you're looking for.",
  participants: 'Participants',
  password: 'Password',
  points: 'Points',
  questions: 'Questions',
  responses: 'Responses:',
  results: 'Results',
  save: 'Save',
  select: 'Select',
  send: 'Send',
  sessions: 'Sessions',
  start: 'Start',
  started: 'Started',
  status: 'Status',
  text: 'Text',
  title: 'Title',
  view: 'View',
  yes: 'Yes',
  no: 'No',
  home: {
    hero: 'SamaQuiz',
    hero_text: 'Run live quizzes with ease. Free for up to 10 participants.',
    details: 'Example Section',
    details_text:
      'Replace this text and add an image on the right, or remove the section entirely.',
    my: 'My Quizzes',
  },
  auth: {
    login: 'Log In',
    sign_up: 'Sign Up',
    modal_text: 'You were signed out, please log in again.',
    sign_up_subtitle: 'Create an account.',
    no_account: "Don't have an account?",
    click_here: 'Click here to sign up!',
    password: 'Password',
    confirm_password: 'Confirm Password',
    have_account: 'Already have an account?',
    login_here: 'Log in here.',
    terms_agree: 'I agree to the ',
    forgot_password: 'Forgot Password?',
    forgot_password_subtitle:
      'Enter the email associated with your account to reset the password.',
    forgot_password_sent:
      'Thank you. A recovery email will be sent if the provided email matches an account.',
    back_to: 'Back to <>',
    update_password: 'Update Password',
    update_password_error: 'The code is invalid or expired. Want to try again?',
    update_password_text: 'Enter a new password to access your account.',
    confirm: 'Confirm Email',
    confirmed:
      'Your email is confirmed! Click to go to the Sites Dashboard, or close the tab.',
    confirm_expired: 'Code expired, click to resend.',
    confirm_expired_login:
      'Code expired, please log in and resend from the settings page.',
    confirm_resent:
      'Confirmation email resent to {email}, it should arrive in a minute or two!',
    confirm_again: 'Try again later or resend the code from the settings page.',
    resend: 'Resend',
  },
  profile: {
    edit: 'Edit Profile',
    settings: 'Settings',
    email_text: 'Your email is used for notifications and account recovery.',
    password_text: 'Set a unique password to secure your account.',
    update_email: 'Update Email',
    new_email: 'New email',
    update_password: 'Update Password',
    old_password: 'Old password',
    new_password: 'New password',
    confirm_password: 'Confirm new password',
    delete: 'Delete Account',
    delete_text: 'Delete your account and all quiz data.',
    delete_confirm1: 'Are you sure? This cannot be undone',
    delete_confirm2: 'Type DELETE below to confirm.',
  },
  quizzes: {
    title: 'Quizzes',
    delete: 'Delete Quiz',
    delete_text:
      'Are you sure? This cannot be undone. A quiz can only be deleted if it has not been published.',
  },
  quiz: {
    title: 'Quiz',
    edit: 'Edit Quiz',
    sessions: 'Quiz Sessions',
    new: 'New Quiz',
    new_text:
      'Create a new quiz. You can add questions after setting the title and description.',
  },
  question: {
    delete: 'Delete Question',
    delete_text: 'Are you sure? This will delete related answers and cannot be undone.',
    edit: 'Edit Question',
    new: 'New Question',
    new_text: 'Add answers next!',
  },
  answer: {
    title: 'Answer',
    edit: 'Edit Answer',
    new: 'New Answer',
    delete: 'Delete Answer',
    delete_text: 'Are you sure? This cannot be undone.',
  },
  session: {
    new: 'New Session',
    session: 'Quiz Session',
    new_text: 'Create a new session. The code is not case-sensitive.',
    view_text: "Click 'View' to go to the quiz hosting page.",
    empty: 'No Sessions',
    view_quizzes: 'View Quizzes',
    error: 'Session Error',
    register: 'Choose a name and avatar',
    ready: 'Ready!',
    hosted: 'hosted by',
    joined: 'Joined',
    wait_host: 'Waiting for Host...',
    reload: 'Try refreshing the page, or create a new user.',
    user: 'New User',
    qr_expand: 'Click to Expand',
    countdown: 'Starting in...',
    no_question: 'Waiting for the next question',
    no_question_text: 'Try refreshing the page if it takes too long.',
    complete: 'Quiz Complete!',
  },
  settings: {
    title: 'Settings',
  },
  footer: {
    copyright: 'Â© 2024 SamaQuiz - All Rights Reserved.',
    title: 'Real-time quizzes and polls.',
    text: 'Join now to create live quizzes for up to 300 participants.',
    col1: 'Resources',
    col2: 'Quick Links',
    faq: 'FAQ',
    about: 'About',
    home: 'Home',
    terms: 'Terms',
    privacy: 'Privacy Policy',
    cookie: 'Cookie Policy',
  },
  errors: {
    password_length: 'Password must be at least 8 characters.',
    name_len: 'Name must be between 2 and 20 characters.',
    ParticipantNameShort: 'Name must be at least 2 characters.',
    confirm_password: 'Passwords do not match.',
    confirm_text: 'Incorrect confirm text',
    logged_in: 'You must be logged in to view this page',
    QuizNotFound: 'Quiz not found',
    ParticipantNotFound: 'User not found',
    UserExists: 'Email is already in use.',
    InvalidFormData: 'Invalid input',
    InvalidAuth: 'Invalid email or password',
    QuizSessionCode: 'This code already in use.',
    None: 'Unknown error',
  },
}
export const i18n = new SimpleI18n(fallback)
export const ts = getString(i18n)
export const ta = getArray(i18n)
export const tr = getRecord(i18n)
